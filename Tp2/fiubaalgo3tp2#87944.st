Object subclass: #Casillero	instanceVariableNames: 'tapado partidaActual posicion'	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2:87944'!!Casillero commentStamp: 'ls 10/20/2009 13:14' prior: 0!Clase que representa un casillero!!Casillero methodsFor: 'accesing' stamp: 'ls 10/23/2009 15:39'!destapar	"Destapa el casillero"	tapado:=false.	! !!Casillero methodsFor: 'accesing' stamp: 'ls 10/23/2009 15:42'!estaTapado	"Pregunta si  el casillero está tapado o no"		^tapado.! !!Casillero methodsFor: 'accesing' stamp: 'ls 10/26/2009 10:06'!getPosicion^posicion.! !!Casillero methodsFor: 'accesing' stamp: 'ls 10/26/2009 10:07'!setPosicion:pos	"setea la posicion de el casillero expansible"	posicion:=pos.! !!Casillero methodsFor: 'creation' stamp: 'ls 10/25/2009 17:03'!construir:partida	"Construye un casillero"		partidaActual:=partida.! !!Casillero methodsFor: 'creation' stamp: 'ls 10/25/2009 17:01'!initializetapado:=true.! !!Casillero methodsFor: 'accionar' stamp: 'ls 10/23/2009 15:45'!accion	"Realiza una acción dependiendo de que tipo de casillero"	^self subclassResponsibility.	! !Casillero subclass: #Bomba	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2:87944'!!Bomba commentStamp: 'ls 10/20/2009 13:23' prior: 0!Casillero de tipo Bomba!!Bomba methodsFor: 'accionar' stamp: 'ls 10/26/2009 14:35'!accion	"incrementa el contador de bombas y manda mensaje"	Transcript show:'Explotó una bomba en la posicion: ','(',(posicion x asString),',',(posicion y asString),')',' ','//';cr.	partidaActual nuevaBombaEnc.				!]style[(6 55 121 32 4)f2b,f2,f1,f2,f1! !Error subclass: #DestapadaError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2:87944'!Casillero subclass: #Estrella	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2:87944'!!Estrella commentStamp: 'ls 10/20/2009 13:23' prior: 0!Casillero de tipo estrella!!Estrella methodsFor: 'accionar' stamp: 'ls 10/26/2009 14:35'!accion	"Comunica a la partida que encontró una nueva estrella"	Transcript show:'Encontró una estrella en la posicion: ','(',(posicion x asString),',',(posicion y asString),')',' ','//';cr.	partidaActual nuevaEstrellaEnc.	!]style[(6 60 125 35)f2b,f2,f1,f2! !Object subclass: #Explorador	instanceVariableNames: 'miPartida'	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2:87944'!!Explorador commentStamp: 'ls 10/26/2009 10:59' prior: 0!El juego explorador propiamente dicho!!Explorador methodsFor: 'creation' stamp: 'ls 10/27/2009 09:27'!nuevoJuegoFacil	"Crea una partida aleatoria facil"		miPartida:= PartidaFacil new.	miPartida crearPartidaFacil:miPartida.! !!Explorador methodsFor: 'creation' stamp: 'ls 10/26/2009 11:05'!nuevoJuegoFijo	"Crea un juego fijo"		miPartida:= PartidaFija new.	miPartida crearPartidaFija:miPartida.! !!Explorador methodsFor: 'juego' stamp: 'ls 10/27/2009 09:41'!cantBombas	"Devuelve al usuario la cantidad de bombas"		^miPartida getCantBomb.! !!Explorador methodsFor: 'juego' stamp: 'ls 10/27/2009 09:46'!cantEstr	"Devuelve la cantidad de estrellas"		^miPartida getCantEstr.! !!Explorador methodsFor: 'juego' stamp: 'ls 10/26/2009 14:44'!estaGanada^miPartida estaGanada.! !!Explorador methodsFor: 'juego' stamp: 'ls 10/26/2009 14:45'!estaPerdida^miPartida estaPerdida.! !!Explorador methodsFor: 'juego' stamp: 'ls 10/26/2009 14:42'!estaTapada:posicion^miPartida estaTapada:posicion.! !!Explorador methodsFor: 'juego' stamp: 'ls 10/26/2009 14:45'!estaTerminada^miPartida estaTerminada.! !!Explorador methodsFor: 'juego' stamp: 'ls 10/26/2009 14:40'!jugarAl:posicionmiPartida destapar:posicion.! !Casillero subclass: #Libre	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2:87944'!!Libre commentStamp: 'ls 10/20/2009 13:25' prior: 0!Casillero de tipo libre: Puede ser casillero frio, caliente o expandible!Libre subclass: #Expandible	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2:87944'!!Expandible commentStamp: 'ls 10/20/2009 15:10' prior: 0!Casillero Expandible!!Expandible methodsFor: 'accionar' stamp: 'ls 10/26/2009 10:40'!accion	"Comunica a la partida que de vuelta los casilleros de alrededor de él"			Transcript show:'Casillero expandible en la posicion: ','(',(posicion x asString),',',(posicion y asString),')',' ','//';cr.		partidaActual destapar:((posicion x)-1)@((posicion y)-1).	partidaActual destapar:((posicion x)-1)@(posicion y).	partidaActual destapar:((posicion x)-1)@((posicion y)+1).	partidaActual destapar:(posicion x)@((posicion y)-1).	partidaActual destapar:(posicion x)@((posicion y)+1).	partidaActual destapar:((posicion x)+1)@((posicion y)-1).	partidaActual destapar:((posicion x)+1)@(posicion y).	partidaActual destapar:((posicion x)+1)@((posicion y)+1).!]style[(6 78 124 458)f2b,f2,f1,f2! !Object subclass: #Llenador	instanceVariableNames: 'refPartida tableroALlenar'	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2:87944'!!Llenador commentStamp: 'ls 10/24/2009 18:16' prior: 0!Clase que crea y llena un tablero de determinada manera!!Llenador methodsFor: 'creation' stamp: 'ls 10/25/2009 11:35'!crearLlenadorCon:partida en:tablero"Crea el llenador con las referencias a los objetos que conoce"refPartida:=partida.tableroALlenar:=tablero. ! !!Llenador methodsFor: 'proceso' stamp: 'ls 10/25/2009 11:37'!llenar	"llena de acuerdo a la partida elegida"		^self subclassResponsibility.! !Llenador subclass: #LlenadorFijo	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2:87944'!!LlenadorFijo commentStamp: 'ls 10/24/2009 18:16' prior: 0!Clase que crea una partida fija, llenando un tablero con valores predeterminados!!LlenadorFijo methodsFor: 'proceso' stamp: 'ls 10/26/2009 14:37'!llenar	"llena con una partida fija de esta manera:		1(C) 	* 		2(F) 	1(C)   	*	B  		1(F) 	E   		1(C) 	1(C)	1(F)		B		*		E		2(C) 	2(C)		E		1(F)		E		B	2(F)		2(C)		2(F)		1(F)		E										Referencia: 1(C): Casillero caliente de distancia 1.				2(F): Casillero frio de distancia 2.				*: Estrella.				B: Bomba.				E: Expandible.							"	|miCasillero|				miCasillero:= Caliente new.	miCasillero construir:refPartida.	miCasillero setPosicion:1@1.	miCasillero setDistancia:1.	tableroALlenar poner:miCasillero en:1@1.		miCasillero:= Estrella new.	miCasillero construir:refPartida.	miCasillero setPosicion:2@1.	tableroALlenar poner:miCasillero en:2@1.		miCasillero:= Frio new.	miCasillero construir:refPartida.	miCasillero setPosicion:3@1.	miCasillero setDistancia:2.	tableroALlenar poner:miCasillero en:3@1.		miCasillero:= Caliente new.	miCasillero construir:refPartida.	miCasillero setPosicion:4@1.	miCasillero setDistancia:1.	tableroALlenar poner:miCasillero en:4@1.		miCasillero:= Estrella new.	miCasillero construir:refPartida.	miCasillero setPosicion:5@1.	tableroALlenar poner:miCasillero en:5@1.		miCasillero:= Bomba new.	miCasillero construir:refPartida.	miCasillero setPosicion:1@2.	tableroALlenar poner:miCasillero en:1@2.		miCasillero:= Frio new.	miCasillero construir:refPartida.	miCasillero setPosicion:2@2.	miCasillero setDistancia:1.	tableroALlenar poner:miCasillero en:2@2.		miCasillero:= Expandible new.	miCasillero construir:refPartida.	miCasillero setPosicion:3@2.	tableroALlenar poner:miCasillero en:3@2.		miCasillero:= Caliente new.	miCasillero construir:refPartida.	miCasillero setPosicion:4@2.	miCasillero setDistancia:1.	tableroALlenar poner:miCasillero en:4@2.		miCasillero:= Caliente new.	miCasillero construir:refPartida.	miCasillero setPosicion:5@2.	miCasillero setDistancia:1.	tableroALlenar poner:miCasillero en:5@2.		miCasillero:= Frio new.	miCasillero construir:refPartida.	miCasillero setPosicion:1@3.	miCasillero setDistancia:1.	tableroALlenar poner:miCasillero en:1@3.		miCasillero:= Bomba new.	miCasillero construir:refPartida.	miCasillero setPosicion:2@3.	tableroALlenar poner:miCasillero en:2@3.		miCasillero:= Estrella new.	miCasillero construir:refPartida.	miCasillero setPosicion:3@3.	tableroALlenar poner:miCasillero en:3@3.		miCasillero:= Expandible new.	miCasillero construir:refPartida.	miCasillero setPosicion:4@3.	tableroALlenar poner:miCasillero en:4@3.		miCasillero:= Caliente new.	miCasillero construir:refPartida.	miCasillero setPosicion:5@3.	miCasillero setDistancia:2.	tableroALlenar poner:miCasillero en:5@3.		miCasillero:= Caliente new.	miCasillero construir:refPartida.	miCasillero setPosicion:1@4.	miCasillero setDistancia:2.	tableroALlenar poner:miCasillero en:1@4.		miCasillero:= Expandible new.	miCasillero construir:refPartida.	miCasillero setPosicion:2@4.	tableroALlenar poner:miCasillero en:2@4.		miCasillero:= Frio new.	miCasillero construir:refPartida.	miCasillero setPosicion:3@4.	miCasillero setDistancia:1.	tableroALlenar poner:miCasillero en:3@4.		miCasillero:= Expandible new.	miCasillero construir:refPartida.	miCasillero setPosicion:4@4.	tableroALlenar poner:miCasillero en:4@4.		miCasillero:= Bomba new.	miCasillero construir:refPartida.	miCasillero setPosicion:5@4.	tableroALlenar poner:miCasillero en:5@4.		miCasillero:= Frio new.	miCasillero construir:refPartida.	miCasillero setPosicion:1@5.	miCasillero setDistancia:2.	tableroALlenar poner:miCasillero en:1@5.		miCasillero:= Caliente new.	miCasillero construir:refPartida.	miCasillero setPosicion:2@5.	miCasillero setDistancia:2.	tableroALlenar poner:miCasillero en:2@5.		miCasillero:= Frio new.	miCasillero construir:refPartida.	miCasillero setPosicion:3@5.	miCasillero setDistancia:2.	tableroALlenar poner:miCasillero en:3@5.		miCasillero:= Frio new.	miCasillero construir:refPartida.	miCasillero setPosicion:4@5.	miCasillero setDistancia:1.	tableroALlenar poner:miCasillero en:4@5.		miCasillero:= Expandible new.	miCasillero construir:refPartida.	miCasillero setPosicion:5@5.	tableroALlenar poner:miCasillero en:5@5.	! !Llenador subclass: #LlenadorJuegoFacil	instanceVariableNames: 'miArray'	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2:87944'!!LlenadorJuegoFacil commentStamp: 'ls 10/26/2009 14:57' prior: 0!Clase que llena el tablero de manera aleatoria pero de difocultad facil con 3 bombas y estrellas y tamaño 5x5!!LlenadorJuegoFacil methodsFor: 'proceso' stamp: 'ls 10/26/2009 22:56'!calcularDistanciaBomba:pos|min bomb dist resta1 resta2 parte |	min:=10000.		4 to:6 do:[:i|				bomb:=miArray at:i.		resta1:=(pos x)-(bomb x).		resta2:=(pos y)-(bomb y).		parte:=((resta1 squared) + (resta2 squared)).		dist:=((parte sqrt)rounded).		 (dist<min) ifTrue:[min:=dist].		].	^min.! !!LlenadorJuegoFacil methodsFor: 'proceso' stamp: 'ls 10/26/2009 22:56'!calcularDistanciaEstrella:pos		|min est dist resta1 resta2 parte |	min:=10000.		1 to:3 do:[:i|				est:=miArray at:i.		resta1:=(pos x)-(est x).		resta2:=(pos y)-(est y).		parte:=((resta1 squared) + (resta2 squared)).		dist:=((parte sqrt)rounded).		 (dist<min) ifTrue:[min:=dist].		].	^min.	! !!LlenadorJuegoFacil methodsFor: 'proceso' stamp: 'ls 10/26/2009 19:49'!colocarEstrellasYBombas| miCasillero |miCasillero:= Estrella new.miCasillero construir:refPartida.miCasillero setPosicion:(miArray at:1).tableroALlenar poner:miCasillero en:(miArray at:1).miCasillero:= Estrella new.miCasillero construir:refPartida.miCasillero setPosicion:(miArray at:2).tableroALlenar poner:miCasillero en:(miArray at:2).miCasillero:= Estrella new.miCasillero construir:refPartida.miCasillero setPosicion:(miArray at:3).tableroALlenar poner:miCasillero en:(miArray at:3).miCasillero:= Bomba new.miCasillero construir:refPartida.miCasillero setPosicion:(miArray at:4).tableroALlenar poner:miCasillero en:(miArray at:4).miCasillero:= Bomba new.miCasillero construir:refPartida.miCasillero setPosicion:(miArray at:5).tableroALlenar poner:miCasillero en:(miArray at:5).miCasillero:= Bomba new.miCasillero construir:refPartida.miCasillero setPosicion:(miArray at:6).tableroALlenar poner:miCasillero en:(miArray at:6).!]style[(25 935)f1,f2! !!LlenadorJuegoFacil methodsFor: 'proceso' stamp: 'ls 10/26/2009 19:25'!crearArray"Crea un array con posiciones detinadas a estrellas y bombas"| pos i j igual salir k elem |miArray:=Array new:6.pos:=1.i:=5 atRandom.j:=5 atRandom.miArray at:pos put:i@j.pos:=pos+1.[pos <=6] whileTrue:[					igual:=false.					salir:=false.					i:=5 atRandom.					j:=5 atRandom.					k:=1.					[(salir=false) & (k<=miArray size)] whileTrue:[												elem:=miArray at:k.												(elem=nil) ifTrue:[																salir:=true																]																ifFalse:[																		((elem x = i) & (elem y = j)) ifTrue:[ 																						salir:=true.																						igual:=true																					                                                                                                           ]																																																														].																												 k:=k+1															 ].																						(igual=false) ifTrue:[						miArray at:pos put:i@j.						pos:=pos+1						].																								  													].												!]style[(75 31 941)f1,f2,f1! !!LlenadorJuegoFacil methodsFor: 'proceso' stamp: 'ls 10/26/2009 19:44'!inicializarTablero	"inicializa el tablero con nil"		1 to:5 do:[:i|	1 to:5 do:[:j|		tableroALlenar poner:nil en:i@j.		].	].!]style[(18 39 74)f2b,f2,f1! !!LlenadorJuegoFacil methodsFor: 'proceso' stamp: 'ls 10/26/2009 20:50'!llenar"Llena el tablero con tamaño fijo 3 estrellas y bombas con distribucion aleatoria"||self crearArray.self inicializarTablero.self colocarEstrellasYBombas.self randomizarMatriz! !!LlenadorJuegoFacil methodsFor: 'proceso' stamp: 'ls 10/26/2009 20:50'!randomizarMatriz			| elem valor miCasillero distancia |	1 to:5 do:[:i|			1 to:5 do:[:j|					elem:=tableroALlenar extraerDesde:i@j.					(elem=nil) ifTrue:[										valor:=3 atRandom.										(valor=1) ifTrue:[ 																								miCasillero:= Expandible new.													miCasillero construir:refPartida.													miCasillero setPosicion:i@j.													tableroALlenar poner:miCasillero en:i@j													].																						(valor=2) ifTrue:[														distancia:=self calcularDistanciaEstrella:i@j.														miCasillero:= Caliente new.														miCasillero construir:refPartida.														miCasillero setPosicion:i@j.														miCasillero setDistancia:distancia.														tableroALlenar poner:miCasillero en:i@j														].																					(valor=3) ifTrue:[																	distancia:=self calcularDistanciaBomba:i@j.														miCasillero:= Frio new.														miCasillero construir:refPartida.														miCasillero setPosicion:i@j.														miCasillero setDistancia:distancia.														tableroALlenar poner:miCasillero en:i@j														].													].												].											].	! !Object subclass: #MatrizCuadrada	instanceVariableNames: 'terna rango'	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2:87944'!!MatrizCuadrada commentStamp: 'ls 10/19/2009 18:16' prior: 0!Matriz Cuadrada!!MatrizCuadrada methodsFor: 'inicializador' stamp: 'ls 10/19/2009 18:17'!constructor: N	"Construye la matriz"	terna:=Dictionary new.	rango:=N.! !!MatrizCuadrada methodsFor: 'proceso' stamp: 'ls 10/19/2009 19:03'!extraerDesde: posicion	"Extrae el elemento"		( (posicion x > rango) | (posicion y > rango) ) ifTrue:		[PositionOutOfBoundsError new signal ].		^terna at: posicion.	! !!MatrizCuadrada methodsFor: 'proceso' stamp: 'ls 10/19/2009 19:10'!getRango	"devuelve rango"		^rango.! !!MatrizCuadrada methodsFor: 'proceso' stamp: 'ls 10/19/2009 19:03'!poner:elemento en:posicion	"Coloca un elemento en la posición si es posible"		((posicion x > rango) | (posicion y >rango)) ifTrue:	[PositionOutOfBoundsError new signal].	terna at: posicion put:elemento.! !Libre subclass: #Numeral	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2:87944'!!Numeral commentStamp: 'ls 10/20/2009 13:38' prior: 0!Clase de tipo numeral: Es frio o caliente!!Numeral methodsFor: 'accesing' stamp: 'ls 10/23/2009 17:00'!getDistancia		^self subclassResponsibility.! !!Numeral methodsFor: 'accesing' stamp: 'ls 10/20/2009 13:41'!setDistancia	"Setea la distancia"	^self subclassResponsibility! !Numeral subclass: #Caliente	instanceVariableNames: 'distanciaMinimaEstrella'	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2:87944'!!Caliente commentStamp: 'ls 10/20/2009 13:49' prior: 0!Casillero de tipo estrella!!Caliente methodsFor: 'accesing' stamp: 'ls 10/23/2009 17:02'!getDistancia		^distanciaMinimaEstrella.! !!Caliente methodsFor: 'accesing' stamp: 'ls 10/20/2009 16:22'!setDistancia:distancia	"Setea la distancia mínima a la estrella"	distanciaMinimaEstrella:=distancia.	! !!Caliente methodsFor: 'creation' stamp: 'ls 10/25/2009 17:03'!initialize	"Inicializa el casillero caliente"	super initialize.	distanciaMinimaEstrella:=-1.	posicion:=-1@-1.! !!Caliente methodsFor: 'accionar' stamp: 'ls 10/25/2009 18:48'!accion	"Avisa al usuario que hay una estrella a cierta distancia del casillero	FillInTheBlank request:'La distancia a una estrella desde la posicion: ','(',(posicion x asString),',',(posicion y asString),')',' ','es:'initialAnswer:(distanciaMinimaEstrella asString)."  	Transcript show:'La distancia a una estrella desde la posicion: ','(',(posicion x asString),',',(posicion y asString),')',' ','es: ',(distanciaMinimaEstrella asString),'//';cr.	!]style[(6 76 153 1 173 1 45)f2b,f2,f1,f1b,f1,f1b,f1! !Numeral subclass: #Frio	instanceVariableNames: 'distanciaMinimaBomba'	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2:87944'!!Frio commentStamp: 'ls 10/20/2009 13:43' prior: 0!Casillero Frio!!Frio methodsFor: 'creation' stamp: 'ls 10/25/2009 17:04'!initialize	"Inicializa el casillero frio"	super initialize.	distanciaMinimaBomba:=-1.	posicion:=-1@-1.! !!Frio methodsFor: 'accesing' stamp: 'ls 10/23/2009 17:01'!getDistancia		^distanciaMinimaBomba.! !!Frio methodsFor: 'accesing' stamp: 'ls 10/20/2009 16:21'!setDistancia:distancia	"Setea la distancia mínima a la bomba"	distanciaMinimaBomba:=distancia.	! !!Frio methodsFor: 'accionar' stamp: 'ls 10/25/2009 18:48'!accion	"Avisa al usuario que hay una estrella a cierta distancia del casillero	FillInTheBlank request:'La distancia a una bomba desde la posicion: ','(',(posicion x asString),',',(posicion y asString),')',' ','es:'initialAnswer:(distanciaMinimaBomba asString)."	Transcript show:'La distancia a una bomba desde la posicion: ','(',(posicion x asString),',',(posicion y asString),')',' ','es: ',(distanciaMinimaBomba asString),'//';cr.!]style[(6 76 150 1 165 1 39)f2b,f2,f1,f1b,f1,f1b,f1! !Object subclass: #Partida	instanceVariableNames: 'miTablero cantEstr cantBomb ganada miLlenador perdida terminada'	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2:87944'!!Partida commentStamp: 'ls 10/24/2009 15:59' prior: 0!Clase que contiene los datos de la partida y es el que la dirige.!!Partida methodsFor: 'accesing' stamp: 'ls 10/24/2009 16:07'!estaGanada^ganada.! !!Partida methodsFor: 'accesing' stamp: 'ls 10/24/2009 16:22'!estaPerdida^perdida.! !!Partida methodsFor: 'accesing' stamp: 'ls 10/24/2009 16:09'!estaTapada:posicion^(miTablero estaTapada:(posicion)).! !!Partida methodsFor: 'accesing' stamp: 'ls 10/24/2009 17:15'!estaTerminada^terminada.! !!Partida methodsFor: 'accesing' stamp: 'ls 10/24/2009 16:07'!getCantBomb^cantBomb.! !!Partida methodsFor: 'accesing' stamp: 'ls 10/24/2009 16:06'!getCantEstr^cantEstr.! !!Partida methodsFor: 'accesing' stamp: 'ls 10/25/2009 12:36'!getTablero^miTablero.! !!Partida methodsFor: 'accesing' stamp: 'ls 10/25/2009 16:31'!obtenerCasillero:posicion^(miTablero obtenerCelda:posicion).! !!Partida methodsFor: 'creation' stamp: 'ls 10/25/2009 14:50'!initialize	"inicializa la partida"	cantEstr:=0.	cantBomb:=0.	ganada:=false.	perdida:=false.	terminada:=false.				! !!Partida methodsFor: 'proceso' stamp: 'ls 10/25/2009 18:49'!destapar:posicion"Manda a destapar al tablero el casillero de posición posicion. En caso de estar destapado o la partida terminada manda mensaje"terminada ifTrue:[				  "FillInTheBlank request:'La partida está terminada'				  initialAnswer:'crea otra'."				  Transcript show:'La partida está terminada';cr.		]ifFalse:[				[miTablero destapar:(posicion)] 			on:DestapadaError			do:[				"FillInTheBlank request:'La posición;' , ' ' , '(' , (posicion x asString) , ',' , (posicion y asString), ')' , ' ' , 'está destapada'				initialAnswer:'proba otra'."				Transcript show:'La posición;' , ' ' , '(' , (posicion x asString) , ',' , (posicion y asString), ')' , ' ' , 'está destapada','//';cr.				]			].!]style[(17 159 139 85 306 15)f2b,f2,f1,f2,f1,f2! !!Partida methodsFor: 'proceso' stamp: 'ls 10/26/2009 10:46'!nuevaBombaEnc"En caso de haber encontrado una nueva bomba la computa a menos que el juego este ganado o perdido"terminada ifFalse:[cantBomb:=cantBomb + 1.	(cantBomb = 3) ifTrue:[		perdida:=true.		terminada:=true.		Transcript show:'PERDISTE!!!!!! XD';cr.	]	]!]style[(13 112 98 37 4)f1b,f1,f2,f1,f2! !!Partida methodsFor: 'proceso' stamp: 'ls 10/26/2009 10:47'!nuevaEstrellaEnc"En caso de haber encontrado una nueva estrella la computa a menos que el juego este ganado o perdido"terminada ifFalse:[cantEstr:=cantEstr + 1.	(cantEstr = 3) ifTrue:[		ganada:=true.		terminada:=true.		Transcript show:'GANASTE!!!!!! ;-)';cr.]		]!]style[(16 115 97 36 5)f1b,f1,f2,f1,f2! !Partida subclass: #PartidaFacil	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2:87944'!!PartidaFacil commentStamp: 'ls 10/26/2009 20:52' prior: 0!clase que cre una partida facil!!PartidaFacil methodsFor: 'creation' stamp: 'ls 10/26/2009 20:53'!crearPartidaFacil:partidamiLlenador:=LlenadorJuegoFacil new.miTablero:= Tablero new.miTablero crearTablero:5.miLlenador crearLlenadorCon:partida en:miTablero.miLlenador llenar.! !!PartidaFacil methodsFor: 'creation' stamp: 'ls 10/26/2009 20:52'!initializesuper initialize.! !Partida subclass: #PartidaFija	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2:87944'!!PartidaFija commentStamp: 'ls 10/24/2009 18:11' prior: 0!clase que crea una partida fija por el creador del juego. !!PartidaFija methodsFor: 'creation' stamp: 'ls 10/25/2009 16:27'!crearPartidaFija: partida"Crea una partida fija creando un llenador que se encarga de llenar la matriz de determinada manera"miLlenador:=LlenadorFijo new.miTablero:= Tablero new.miTablero crearTablero:5.miLlenador crearLlenadorCon:partida en:miTablero.miLlenador llenar.! !!PartidaFija methodsFor: 'creation' stamp: 'ls 10/25/2009 16:44'!initializesuper initialize.! !Error subclass: #PositionOutOfBoundsError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2:87944'!!PositionOutOfBoundsError commentStamp: 'ls 10/19/2009 18:27' prior: 0!Excepción que devuelve si la posición está fuera del rango!Object subclass: #Tablero	instanceVariableNames: 'miMatriz'	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2:87944'!!Tablero commentStamp: 'ls 10/25/2009 10:13' prior: 0!Clase que contiene el tablero del juego!!Tablero methodsFor: 'accesing' stamp: 'ls 10/25/2009 18:49'!destapar:posicion"Destapa la posición y la acciona si existe y devuelve excepción si estaba destapada"| casillero |[casillero:=miMatriz extraerDesde:posicion] on:PositionOutOfBoundsError do:[	"FillInTheBlank request:'La posición;' , ' ' , '(' , (posicion x asString) , ',' , (posicion y asString), ')' , ' ' , 'no existe'	initialAnswer:'proba otra'."	Transcript show:'La posición;' , ' ' , '(' , (posicion x asString) , ',' , (posicion y asString), ')' , ' ' , 'no existe','//';cr.	^1.			].			(casillero estaTapado)ifFalse:[							DestapadaError new signal.							]ifTrue:[									casillero destapar.									casillero accion.							]			!]style[(17 186 456)f2b,f2,f1! !!Tablero methodsFor: 'accesing' stamp: 'ls 10/26/2009 10:52'!estaTapada:posicion"Devuelve  si el casillero está tapado. En caso de no existir la posición manda un mensaje al usuario" | casillero |[casillero:=miMatriz extraerDesde:posicion] on:PositionOutOfBoundsError do:[	"FillInTheBlank request:'La posición;' , ' ' , '(' , (posicion x asString) , ',' , (posicion y asString), ')' , ' ' , 'no existe'	initialAnswer:'proba otra'."	Transcript show:'La posición;' , ' ' , '(' , (posicion x asString) , ',' , (posicion y asString), ')' , ' ' , 'no existe','//';cr.	^1.].				^casillero estaTapado.	!]style[(124 97 302 25)f2b,f2,f1,f2! !!Tablero methodsFor: 'accesing' stamp: 'ls 10/26/2009 19:57'!extraerDesde:posicion			^miMatriz extraerDesde:posicion.! !!Tablero methodsFor: 'accesing' stamp: 'ls 10/25/2009 10:26'!getRango"Devuelve el rango del tablero"^miMatriz getRango.! !!Tablero methodsFor: 'accesing' stamp: 'ls 10/25/2009 16:32'!obtenerCelda:posicion^(miMatriz extraerDesde:posicion).! !!Tablero methodsFor: 'accesing' stamp: 'ls 10/25/2009 10:36'!poner:elemento en:posicion	"Coloca un elemento en el tablero"		miMatriz poner:elemento en:posicion.! !!Tablero methodsFor: 'creation' stamp: 'ls 10/25/2009 14:39'!crearTablero:N"Construye el Tablero"miMatriz:=MatrizCuadrada new.miMatriz constructor:N.! !TestCase subclass: #TestBomba	instanceVariableNames: 'miBomba miPartida'	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2:87944'!!TestBomba commentStamp: 'ls 10/23/2009 18:59' prior: 0!Clase que prueba el casillero bomba!!TestBomba methodsFor: 'running' stamp: 'ls 10/25/2009 16:36'!setUpmiPartida:= PartidaFija new.miPartida crearPartidaFija:miPartida.miBomba:= (miPartida obtenerCasillero:1@2).! !!TestBomba methodsFor: 'testing' stamp: 'ls 10/25/2009 16:47'!testAccion"prueba si incrementa el contador de bombas en partida"miBomba accion.self assert:(miPartida getCantBomb = 1).! !!TestBomba methodsFor: 'testing' stamp: 'ls 10/25/2009 17:00'!testDestapar"Prueba sia al destapar cambia su valor booleano"miBomba destapar.self assert:(miBomba estaTapado=false).! !TestCase subclass: #TestCaliente	instanceVariableNames: 'miCaliente miPartida'	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2:87944'!!TestCaliente commentStamp: 'ls 10/23/2009 17:13' prior: 0!Clase que prueba Caliente!!TestCaliente methodsFor: 'running' stamp: 'ls 10/25/2009 16:54'!setUpmiPartida:= PartidaFija new.miPartida crearPartidaFija:miPartida.miCaliente:= (miPartida obtenerCasillero:1@1).! !!TestCaliente methodsFor: 'testing' stamp: 'ls 10/25/2009 16:55'!testAccion"Prueba si envia al usuario un mensaje con la distancia a una estrella"miCaliente accion.self assert:(true=true).! !!TestCaliente methodsFor: 'testing' stamp: 'ls 10/25/2009 17:01'!testDestapar"Prueba sia al destapar cambia su valor booleano"miCaliente destapar.self assert:((miCaliente estaTapado)=false).! !!TestCaliente methodsFor: 'testing' stamp: 'ls 10/25/2009 17:11'!testGetDistancia	"Prueba getDistancia"		self assert:(miCaliente getDistancia=1).! !!TestCaliente methodsFor: 'testing' stamp: 'ls 10/23/2009 18:04'!testSetDistancia	"Setea la distancia"	miCaliente setDistancia:8.	self assert:(miCaliente getDistancia = 8).! !TestCase subclass: #TestEstrella	instanceVariableNames: 'miEstrella miPartida'	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2:87944'!!TestEstrella commentStamp: 'ls 10/23/2009 21:36' prior: 0!Clase que prueba la clase estrella!!TestEstrella methodsFor: 'testing' stamp: 'ls 10/25/2009 17:13'!testAccion"prueba si incrementa el contador de estrellas en partida"miEstrella accion.self assert:(miPartida getCantEstr = 1).! !!TestEstrella methodsFor: 'testing' stamp: 'ls 10/23/2009 22:03'!testDestaparmiEstrella destapar.self assert:(miEstrella estaTapado=false).! !!TestEstrella methodsFor: 'running' stamp: 'ls 10/25/2009 17:13'!setUpmiPartida:= PartidaFija new.miPartida crearPartidaFija:miPartida.miEstrella:= (miPartida obtenerCasillero:3@3).! !TestCase subclass: #TestExpandible	instanceVariableNames: 'miExpandible miPartida'	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2:87944'!!TestExpandible commentStamp: 'ls 10/24/2009 15:01' prior: 0!Clase que prueba el casillero Expandible!!TestExpandible methodsFor: 'testing' stamp: 'ls 10/25/2009 18:01'!testAccion"prueba si expande los casilleros de alrededor"miExpandible destapar.miExpandible accion.	self assert:((miPartida estaTapada:(((miExpandible getPosicion) x)-1)@(((miExpandible getPosicion) y)-1)) = false).	self assert:((miPartida estaTapada:(((miExpandible getPosicion) x)-1)@((miExpandible getPosicion) y)) = false).	self assert:((miPartida estaTapada:(((miExpandible getPosicion) x)-1)@(((miExpandible getPosicion) y)+1)) = false).		self assert:((miPartida estaTapada:((miExpandible getPosicion) x)@(((miExpandible getPosicion) y)-1)) = false).	self assert:((miPartida estaTapada:((miExpandible getPosicion) x)@(((miExpandible getPosicion) y)+1)) = false).	self assert:((miPartida estaTapada:(((miExpandible getPosicion) x)+1)@(((miExpandible getPosicion) y)-1)) = false).	self assert:((miPartida estaTapada:(((miExpandible getPosicion) x)+1)@((miExpandible getPosicion) y)) = false).	self assert:((miPartida estaTapada:(((miExpandible getPosicion) x)+1)@(((miExpandible getPosicion) y)+1)) = false).		self assert:((miPartida getCantBomb=1)).! !!TestExpandible methodsFor: 'testing' stamp: 'ls 10/24/2009 15:02'!testDestaparmiExpandible destapar.self assert:(miExpandible estaTapado=false).! !!TestExpandible methodsFor: 'running' stamp: 'ls 10/25/2009 17:23'!setUpmiPartida:= PartidaFija new.miPartida crearPartidaFija:miPartida.miExpandible:= (miPartida obtenerCasillero:2@4).! !TestCase subclass: #TestExpandibleCascada	instanceVariableNames: 'miExpansibleCascada miPartida'	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2:87944'!!TestExpandibleCascada commentStamp: 'ls 10/25/2009 17:42' prior: 0!Clase que prueba un expansible que llama a 4 más!!!!!!!!!!!!TestExpandibleCascada methodsFor: 'testing' stamp: 'ls 10/25/2009 18:02'!testAccionCascada"Prueba un expandible que va a llamar a 4 más. El resultado será 2 bombas y 2 estrellas encontradas. Si manda muchos mensajes no se colgó el squeak es así"miExpansibleCascada destapar.miExpansibleCascada accion.self assert:((miPartida getCantBomb)=2).self assert:((miPartida getCantEstr)=2).! !!TestExpandibleCascada methodsFor: 'running' stamp: 'ls 10/25/2009 17:43'!setUpmiPartida:= PartidaFija new.miPartida crearPartidaFija:miPartida.miExpansibleCascada:= (miPartida obtenerCasillero:5@5).! !TestCase subclass: #TestExplorador	instanceVariableNames: 'miExplorador'	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2:87944'!!TestExplorador commentStamp: 'ls 10/27/2009 10:09' prior: 0!Clase que prueba el explorador!!TestExplorador methodsFor: 'running' stamp: 'ls 10/27/2009 10:25'!setUpmiExplorador:= Explorador new.miExplorador nuevoJuegoFijo.! !!TestExplorador methodsFor: 'testing' stamp: 'ls 10/27/2009 10:23'!testCantBombas	"Prueba la cantidad de de bombas"		self assert:((miExplorador cantBombas)=0).! !!TestExplorador methodsFor: 'testing' stamp: 'ls 10/27/2009 10:33'!testCantEstr	"Prueba la cantidad de estrellas"	self assert:((miExplorador cantEstr)=0).! !!TestExplorador methodsFor: 'testing' stamp: 'ls 10/27/2009 10:37'!testEstaGanadaFalse"Prueba si no esta ganada"self assert:((miExplorador estaGanada)=false).! !!TestExplorador methodsFor: 'testing' stamp: 'ls 10/27/2009 10:43'!testEstaGanadaTrue"Prueba si el juego esta ganado"miExplorador jugarAl:2@1.miExplorador jugarAl:3@3.miExplorador jugarAl:5@1.self assert:((miExplorador estaGanada)=true).! !!TestExplorador methodsFor: 'testing' stamp: 'ls 10/27/2009 10:44'!testEstaPerdidaFalse"Prueba si no esta perdida"self assert:((miExplorador estaPerdida)=false).! !!TestExplorador methodsFor: 'testing' stamp: 'ls 10/27/2009 10:47'!testEstaPerdidaTrue"Prueba si el juego esta perdido"miExplorador jugarAl:1@2.miExplorador jugarAl:2@3.miExplorador jugarAl:5@4.self assert:((miExplorador estaPerdida)=true).! !!TestExplorador methodsFor: 'testing' stamp: 'ls 10/27/2009 10:50'!testEstaTapadaFalse"Prueba si esta no está tapado casillero"miExplorador jugarAl:1@1.self assert:((miExplorador estaTapada:1@1)=false).! !!TestExplorador methodsFor: 'testing' stamp: 'ls 10/27/2009 10:53'!testEstaTapadaNoExiste"En caso de jugar con un casillero inexistente debería mandar un mensaje"self assert:((miExplorador estaTapada:6@6)=1).! !!TestExplorador methodsFor: 'testing' stamp: 'ls 10/27/2009 10:49'!testEstaTapadaTrue"Prueba si esta tapada verdaderamente un casillero"self assert:((miExplorador estaTapada:1@1)=true).! !!TestExplorador methodsFor: 'testing' stamp: 'ls 10/27/2009 10:57'!testEstaTerminadaGanada"Prueba que la partida esta terminada cuando encuentro 3 estrellas"miExplorador jugarAl:2@1.miExplorador jugarAl:3@3.miExplorador jugarAl:5@1.self assert:((miExplorador estaTerminada)=true).! !!TestExplorador methodsFor: 'testing' stamp: 'ls 10/27/2009 10:57'!testEstaTerminadaPerdida"Prueba que la partida esta terminada cuando encuentro 3 bombas"miExplorador jugarAl:1@2.miExplorador jugarAl:2@3.miExplorador jugarAl:5@4.self assert:((miExplorador estaTerminada)=true).! !TestCase subclass: #TestFrio	instanceVariableNames: 'miFrio miPartida'	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2:87944'!!TestFrio commentStamp: 'ls 10/23/2009 20:47' prior: 0!Clase que prueba el casillero frio!!TestFrio methodsFor: 'testing' stamp: 'ls 10/25/2009 17:17'!testAccion"Prueba si envia al usuario un mensaje con la distancia a una bomba"miFrio accion.self assert:(true=true).! !!TestFrio methodsFor: 'testing' stamp: 'ls 10/23/2009 20:50'!testDestaparmiFrio destapar.self assert:(miFrio estaTapado=false).! !!TestFrio methodsFor: 'testing' stamp: 'ls 10/25/2009 17:18'!testGetDistancia	"Prueba getDistancia"		self assert:(miFrio getDistancia=1).! !!TestFrio methodsFor: 'testing' stamp: 'ls 10/23/2009 20:51'!testSetDistancia	"Setea la distancia"	miFrio setDistancia:15.	self assert:(miFrio getDistancia = 15).! !!TestFrio methodsFor: 'running' stamp: 'ls 10/25/2009 17:17'!setUpmiPartida:= PartidaFija new.miPartida crearPartidaFija:miPartida.miFrio:= (miPartida obtenerCasillero:4@5).! !TestCase subclass: #TestLlenadorFacil	instanceVariableNames: 'miExplorador miPartida'	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2:87944'!!TestLlenadorFacil commentStamp: 'ls 10/27/2009 11:02' prior: 0!Prueba que crearPartidaFacil llena el tablero!!TestLlenadorFacil methodsFor: 'testing' stamp: 'ls 10/27/2009 11:05'!testLlenar	"Prueba si llena el tablero de la manera facil"	||	miPartida crearPartidaFacil:miPartida.1 to:5 do:[:i |		1 to:5 do:[:j |			self assert:((miPartida estaTapada:i@j)=true).			]		]! !!TestLlenadorFacil methodsFor: 'running' stamp: 'ls 10/27/2009 11:05'!setUpmiPartida:=PartidaFacil new.! !TestCase subclass: #TestLlenadorFijo	instanceVariableNames: 'miPartida miLlenador'	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2:87944'!!TestLlenadorFijo commentStamp: 'ls 10/25/2009 12:22' prior: 0!Clase que prueba el llenador fijo!!TestLlenadorFijo methodsFor: 'running' stamp: 'ls 10/25/2009 15:05'!setUpmiPartida:=PartidaFija new.! !!TestLlenadorFijo methodsFor: 'testing' stamp: 'ls 10/25/2009 16:28'!testLlenar	"Prueba si llena el tablero de la manera fija"	||	miPartida crearPartidaFija:miPartida.1 to:5 do:[:i |		1 to:5 do:[:j |			self assert:((miPartida estaTapada:i@j)=true).			]		]				! !TestCase subclass: #TestMatrizCuadrada	instanceVariableNames: 'matrix'	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2:87944'!!TestMatrizCuadrada commentStamp: 'ls 10/19/2009 18:29' prior: 0!Clase de prueba de la clase MatrizCuadrada!!TestMatrizCuadrada methodsFor: 'running' stamp: 'ls 10/19/2009 18:32'!setUpmatrix:= MatrizCuadrada new.matrix constructor:3.! !!TestMatrizCuadrada methodsFor: 'testing' stamp: 'ls 10/19/2009 19:03'!testExtraerDesdeFail	"Prueba ExtraerDesde con parametro incorrecto"	self should:[matrix extraerDesde:5@9.] raise:PositionOutOfBoundsError.! !!TestMatrizCuadrada methodsFor: 'testing' stamp: 'ls 10/19/2009 19:08'!testMatrizCuadradaOk"prueba Poner En con valores correctos"||matrix poner:'hola' en:1@2.self assert:((matrix extraerDesde:1@2) = 'hola').! !!TestMatrizCuadrada methodsFor: 'testing' stamp: 'ls 10/19/2009 19:04'!testPonerEnFailself should: [matrix poner:8 en:4@5.] raise: PositionOutOfBoundsError.! !!TestMatrizCuadrada methodsFor: 'testing' stamp: 'ls 10/19/2009 19:12'!testRangoOk	"prueba el getRango"	self assert:((matrix getRango)=3).	! !TestCase subclass: #TestPartidaFija	instanceVariableNames: 'miPartida'	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2:87944'!!TestPartidaFija commentStamp: 'ls 10/24/2009 18:32' prior: 0!Clase que prueba la clase Partida con una partida fija.!!TestPartidaFija methodsFor: 'testing' stamp: 'ls 10/26/2009 09:30'!testDestaparFail	"Prueba el destapar cuando ya está destapada una casilla, debería aparcer un mensaje en el transcript"miPartida destapar:1@1.miPartida destapar:1@1.self assert:(true=true).! !!TestPartidaFija methodsFor: 'testing' stamp: 'ls 10/26/2009 09:48'!testDestaparOk"Prueba destapar una casilla tapada" miPartida destapar:1@1.self assert:((miPartida estaTapada:1@1) = false).! !!TestPartidaFija methodsFor: 'testing' stamp: 'ls 10/26/2009 09:38'!testEstaGanada"Prueba el estaGanada"self assert:((miPartida estaGanada) = false).! !!TestPartidaFija methodsFor: 'testing' stamp: 'ls 10/26/2009 09:39'!testEstaPerdida"Prueba el estaPerdida"self assert:((miPartida estaPerdida) = false).! !!TestPartidaFija methodsFor: 'testing' stamp: 'ls 10/24/2009 19:24'!testEstaTapadaself assert:((miPartida estaTapada:1@1)).! !!TestPartidaFija methodsFor: 'testing' stamp: 'ls 10/24/2009 18:55'!testEstaTerminadaself assert:((miPartida estaTerminada) = false).! !!TestPartidaFija methodsFor: 'testing' stamp: 'ls 10/26/2009 09:51'!testGanarPartidamiPartida destapar:2@1.miPartida destapar:3@3.miPartida destapar:5@1.self assert:((miPartida getCantEstr) = 3).self assert:((miPartida estaPerdida)=false).self assert:((miPartida estaGanada)=true).self assert:((miPartida estaTerminada)=true).miPartida destapar:2@5.! !!TestPartidaFija methodsFor: 'testing' stamp: 'ls 10/24/2009 19:14'!testGetCantBombself assert:((miPartida getCantBomb) = 0).! !!TestPartidaFija methodsFor: 'testing' stamp: 'ls 10/24/2009 19:15'!testGetCantEstrself assert:((miPartida getCantEstr) = 0).! !!TestPartidaFija methodsFor: 'testing' stamp: 'ls 10/26/2009 09:51'!testPerderPartidamiPartida destapar:1@2.miPartida destapar:2@3.miPartida destapar:5@4.self assert:((miPartida getCantBomb) = 3).self assert:((miPartida estaGanada)=false).self assert:((miPartida estaPerdida)=true).self assert:((miPartida estaTerminada)=true).miPartida destapar:2@5.! !!TestPartidaFija methodsFor: 'running' stamp: 'ls 10/24/2009 18:44'!setUpmiPartida:= PartidaFija new.miPartida crearPartidaFija:miPartida.! !TestCase subclass: #TestTablero	instanceVariableNames: 'miTablero miPartida'	classVariableNames: ''	poolDictionaries: ''	category: 'fiubaalgo3tp2:87944'!!TestTablero commentStamp: 'ls 10/25/2009 10:48' prior: 0!Clase que prueba el tablero!!TestTablero methodsFor: 'testing' stamp: 'ls 10/25/2009 16:17'!testDestaparFailDestapado"Prueba destapar una posición ya destapada"miTablero destapar:1@4.self should:[miTablero destapar:1@4.] raise:DestapadaError.! !!TestTablero methodsFor: 'testing' stamp: 'ls 10/25/2009 16:18'!testDestaparFailPosInc	"Prueba destapar una posición que no existe. Envia un mensaje al usuario"	miTablero destapar:6@6.	self assert:(true=true). ! !!TestTablero methodsFor: 'testing' stamp: 'ls 10/25/2009 16:18'!testDestaparOk"Prueba destapar cuando la posición existe y estaba tapada"miTablero destapar:5@2.self assert:((miTablero estaTapada:5@2)=false).! !!TestTablero methodsFor: 'testing' stamp: 'ls 10/25/2009 16:19'!testEstaTapadaFail"Prueba si un casillero está tapado cuando en realidad no existe. Debería mandar un mensaje al usuario"miTablero estaTapada:7@7.! !!TestTablero methodsFor: 'testing' stamp: 'ls 10/25/2009 16:19'!testEstaTapadaOk"Prueba si una posición del tablero esta tapada cuando esta existe"self assert:((miTablero estaTapada:3@4)=true).! !!TestTablero methodsFor: 'testing' stamp: 'ls 10/25/2009 16:05'!testGetRangoself assert:((miTablero getRango)=5).! !!TestTablero methodsFor: 'running' stamp: 'ls 10/25/2009 15:36'!setUpmiPartida:=PartidaFija new.miPartida crearPartidaFija:miPartida.miTablero:=miPartida getTablero.! !